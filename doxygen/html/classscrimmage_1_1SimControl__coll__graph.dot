digraph "scrimmage::SimControl"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{scrimmage::SimControl\n|# display_progress_\l# t0_\l# tend_\l# dt_\l# t_\l# paused_\l# single_step_\l# take_step_\l# finished_\l# exit_\l# num_entity_threads_\l# entity_pool_stop_\l# entity_pool_condition_var_\l# send_shutdown_msg_\l# prev_paused_\l# limited_verbosity_\l- finalized_called_\l- running_in_thread_\l- python_enabled_\l|+ SimControl()\l+ init()\l+ start()\l+ run()\l+ run_threaded()\l+ run_single_step()\l+ shutdown()\l+ force_exit()\l+ join()\l+ plugin()\l+ get_contacts()\l+ get_contact_visuals()\l+ generate_entities()\l+ generate_entity()\l+ generate_entity()\l+ mp()\l+ set_time()\l+ t()\l+ pause()\l+ paused()\l+ time_warp()\l+ actual_time_warp()\l+ enable_gui()\l+ end_condition_reached()\l+ timer()\l+ metrics()\l+ plugin_manager()\l+ file_search()\l+ set_incoming_interface()\l+ incoming_interface()\l+ set_outgoing_interface()\l+ outgoing_interface()\l+ ents()\l+ send_terrain()\l+ run_send_shapes()\l+ display_progress()\l+ id_to_entity_map()\l+ set_running_in_thread()\l# worker()\l# run_entities()\l# add_tasks()\l# run_sensors()\l# run_motion()\l# reset_autonomies()\l# collision_exists()\l# request_screenshot()\l# create_rtree()\l# run_autonomy()\l# set_autonomy_contacts()\l# run_dynamics()\l# run_interaction_detection()\l# run_logging()\l# run_metrics()\l# run_remove_inactive()\l# run_check_network_msgs()\l# run_send_contact_visuals()\l# run_networks()\l- take_step()\l- single_step()\l- single_step()\l- set_finished()\l- output_summary()\l- output_runtime()\l- output_git_summary()\l- setup_timer()\l- start_overall_timer()\l- start_loop_timer()\l- loop_wait()\l- inc_warp()\l- dec_warp()\l- wait_for_ready()\l- check_output()\l- setup_logging()\l- logging_logic()\l- end_of_simulation()\l- cleanup()\l- finalize()\l- reset_pointers()\l- find_available_id()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #rtree_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{std::shared_ptr\< RTree \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #contact_visuals_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{std::map\< int, ContactVisual\lPtr \>\n|+ keys\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #screenshot_task_\n#reseed_task_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{scrimmage::DelayedTask\n|+ disable\l+ delay\l+ last_updated_time\l+ end_time\l+ eps\l+ condition\l+ task\l# repeat_infinitely_\l# repeats_left_\l|+ DelayedTask()\l+ DelayedTask()\l+ set_delay_from_freq()\l+ done()\l+ set_repeats()\l+ set_repeat_infinitely()\l+ update()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscrimmage_1_1DelayedTask.html",tooltip="repeats a task after a delay and some condition (if set) are met. The task can be set to repeat a fin..."];
  Node13 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #plugin_manager_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{std::shared_ptr\< PluginManager \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node22 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #contacts_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node22 [label="{std::shared_ptr\< Contact\lMap \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node23 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #id_to_team_map_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node23 [label="{std::shared_ptr\< std\l::unordered_map\< int,\l int \> \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node25 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #networks_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node25 [label="{std::shared_ptr\< Network\lMap \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node26 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #entity_worker_threads_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node26 [label="{std::vector\< std::thread \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node27 -> Node26 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node27 [label="{std::thread\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node29 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #global_services_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node29 [label="{std::shared_ptr\< GlobalService \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node32 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #shapes_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node32 [label="{std::map\< int, std\l::list\< scrimmage_proto\l::ShapePtr \> \>\n|+ keys\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node34 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #mp_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node34 [label="{std::shared_ptr\< Mission\lParse \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node53 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #sim_plugin_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node53 [label="{std::shared_ptr\< EntityPlugin \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node92 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #single_step_mutex\l_\n#paused_mutex_\n#entity_pool_mutex\l_\n#finished_mutex\l_\n#time_warp_mutex\l_\n#timer_mutex\l_\n#exit_mutex\l_\n#contacts\l_mutex_\n#time_mutex\l_\n#take_step\l_mutex_\n..." ,arrowhead="odiamond",fontname="Helvetica"];
  Node92 [label="{std::mutex\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node93 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #timer_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node93 [label="{scrimmage::Timer\n|# time_warp_\l# start_time_\l# actual_time_\l# actual_elapsed_time_\l# sim_time_\l# sim_elapsed_time_\l# loop_timer_\l# iterate_period_\l# iterate_rate_\l|+ start_overall_timer()\l+ elapsed_time()\l+ start_loop_timer()\l+ loop_wait()\l+ set_iterate_rate()\l+ set_time_warp()\l+ update_time_config()\l+ inc_warp()\l+ dec_warp()\l+ time_warp()\l+ getnanotime()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscrimmage_1_1Timer.html",tooltip=" "];
  Node94 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #ents_\n#not_ready_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node94 [label="{std::list\< EntityPtr \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node75 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #file_search_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node75 [label="{std::shared_ptr\< FileSearch \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node95 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #ids_used_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node95 [label="{std::set\< int \>\n|+ keys\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node57 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #pubsub_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node57 [label="{std::shared_ptr\< PubSub \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node96 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #entity_pool_queue_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node96 [label="{std::deque\< std::shared\l_ptr\< scrimmage::SimControl\l::Task \> \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node16 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #jsbsim_root_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{std::string\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node100 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #end_conditions_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node100 [label="{std::set\< EndConditionFlags \>\n|+ keys\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node101 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #entity_thread_types_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node101 [label="{std::set\< Task::Type \>\n|+ keys\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node102 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #metrics_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node102 [label="{std::list\< MetricsPtr \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node51 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #proj_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node51 [label="{std::shared_ptr\< Geographic\lLib::LocalCartesian \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node80 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #param_server_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node80 [label="{std::shared_ptr\< Parameter\lServer \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node78 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #time_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node78 [label="{std::shared_ptr\< Time \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node103 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #pub_custom_key_\n#pub_ent_pres_end\l_\n#pub_ent_rm_\n#pub_one_team_\n#pub_ent_int_exit\l_\n#pub_no_teams\l_\n#pub_world\l_point_clicked\l_\n#pub_ent_gen\l_\n#pub_end_time_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node103 [label="{std::shared_ptr\< Publisher \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node107 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #ent_inters_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node107 [label="{std::list\< EntityInteraction\lPtr \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node84 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #random_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node84 [label="{std::shared_ptr\< Random \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node108 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #log_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node108 [label="{std::shared_ptr\< scrimmage\l::Log \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node89 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #id_to_ent_map_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node89 [label="{std::shared_ptr\< std\l::unordered_map\< int,\l EntityPtr \> \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node27 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #network_thread_\n#thread_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node124 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #incoming_interface\l_\n#outgoing_interface_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node124 [label="{std::shared_ptr\< Interface \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
