digraph "scrimmage::sensor::ROSIMUSensor"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{scrimmage::sensor::\lROSIMUSensor\n|# imu_pub_\l# prev_time_\l# earth_radius\l# flattening\l# wgs84_grav\l# earth_rate\l# omega2\l# ecc2\l# flattening_inverse\l# e_prime\l# ae_squared\l# k1\l# earth_semiminor_axis\l# a2\l# b2\l# e2\l# e\l# vel_t1\l# pos_ECEF_t1\l# c_ECEF_To_NED_t1\l# prev_qBody_to_ECEF\l# qBody_to_ECEF_hat\l# p_hat\l# v_hat\l# first_sample_collected\l|+ ROSIMUSensor()\l+ init()\l+ step()\l+ close()\l# lla_to_ecef()\l# enu_to_ecef_rotation()\l# get_deltaV()\l# ecef_to_lla()\l# ecef_to_ned_rotation()\l# gravity_ned_from_lla()\l# skew_sym()\l# get_delta_theta()\l# inv_skew_sym()\l# propagate_quaternion()\l# integrate_quaternion()\l# omega_to_q_dot()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{scrimmage::Sensor\n||+ init()\l+ type()\l+ step()\l+ sensor_msg()\l+ sense()\l+ sense()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classscrimmage_1_1Sensor.html",tooltip=" "];
  Node93 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #csv" ,arrowhead="odiamond",fontname="Helvetica"];
  Node93 [label="{scrimmage::CSV\n|# next_row_\l|+ ~CSV()\l+ set_column_headers()\l+ set_column_headers()\l+ append()\l+ open_output()\l+ output_is_open()\l+ close_output()\l+ to_csv()\l+ read_csv()\l+ read_csv_from_string()\l+ set_no_value_string()\l+ to_string()\l+ rows()\l+ at()\l+ equals()\l# get_csv_line_elements()\l# write_headers()\l# write_row()\l- headers_to_string()\l- rows_to_string()\l- row_to_string()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classscrimmage_1_1CSV.html",tooltip=" "];
  Node6 -> Node93 [color="grey25",fontsize="10",style="solid",label=" #no_value_str_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{std::string\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node95 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #error_budget" ,arrowhead="odiamond",fontname="Helvetica"];
  Node95 [label="{HG4930IMUBudget\n|+ localInRunBiasOption\l+ AccelFullScaleG\l+ AccelScaleFactorPPMStdDev\l+ AccelMisalignmentRadians\l+ AccelBiasRepeatabilityG\l+ AccelBiasInstabilityG\l+ AccelBiasTimeConstantSec\l+ AccelVRWGPerRtHz\l+ localAccelDeltaVQuantizationMPS\l+ GyroFullScaleDegPerSec\l+ GyroScaleFactorPPMStdDev\l+ GyroMisalignmentRadians\l+ GyroBiasRepeatabilityDeg\lPerHr\l+ GyroBiasInstabilityDegPerHr\l+ GyroBiasInstabilityTimeConstantSec\l+ GyroARWDegPerRtHr\l+ localGyroDeltaThetaQuantization\lRadians\l|+ HG4930IMUBudget()\l+ CalculateParameters()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classHG4930IMUBudget.html",tooltip=" "];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #vehicle_name_\n#ros_namespace_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node97 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #error_sim" ,arrowhead="odiamond",fontname="Helvetica"];
  Node97 [label="{IMUErrorSimulator\n|+ InRunBiasOption\l+ InitRandomNumberSeed\l+ RandomNumberSeedsPerInstance\l+ NominalDeltaT\l+ Ma\l+ AccelScaleFactorErr\l+ AccelBiasTurnOn\l+ AccelBiasInRun\l+ AccelBiasPhi\l+ AccelBiasInRunStdDev\l+ TotalAccelBias\l+ AccelVRWMSStdDev\l+ AccelVRWMSDraws\l+ AccelQuantizationResiduals\l+ Mg\l+ GyroScaleFactorErr\l+ GyroBiasTurnOn\l+ GyroBiasInRun\l+ GyroBiasPhi\l+ GyroBiasInRunStdDev\l+ TotalGyroBias\l+ GyroARWRadStdDev\l+ GyroARWRadDraws\l+ GyroQuantizationResiduals\l+ InitRNG\l+ AccelBiasRNG\l+ AccelVRWRNG\l+ GyroBiasRNG\l+ GyroARWRNG\l+ InitDist\l+ AccelBiasDist\l+ AccelVRWDist\l+ GyroBiasDist\l+ GyroARWDist\l|+ IMUErrorSimulator()\l+ RandomVector()\l+ PerformInitialRandomDraws()\l+ CalculateParametersForFixed\lDeltaT()\l+ EachCycle()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classIMUErrorSimulator.html",tooltip=" "];
  Node98 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #nh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node98 [label="{std::shared_ptr\< ros\l::NodeHandle \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
