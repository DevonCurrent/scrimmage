digraph "scrimmage::autonomy::PyAutonomy"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{scrimmage::autonomy\l::PyAutonomy\n|# step_autonomy_called_\l# py_obj_\l# py_contacts_\l# py_state_class_\l# py_quat_class_\l# py_contact_class_\l# py_msg_class_\l# py_state_\l# py_id_class_\l# serialize_msgs_\l# py_contact_types_\l|+ PyAutonomy()\l+ init()\l+ step_autonomy()\l+ type()\l+ set_contacts()\l+ set_contacts_from_plugin()\l+ set_state()\l# cache_python_vars()\l# get_py_obj()\l# init_py_obj()\l# print_py_traceback()\l# state2py()\l# contact2py()\l# py2shape()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{scrimmage::Autonomy\n|# proj_\l# state_\l# desired_state_\l# contacts_\l# rtree_\l# need_reset_\l# logging_msg_\l# is_controlling_\l|+ Autonomy()\l+ type()\l+ step_autonomy()\l+ posthumous()\l+ init()\l+ ready()\l+ init()\l+ close()\l+ need_reset()\l+ desired_state()\l+ set_desired_state()\l+ get_contacts()\l+ get_contacts_raw()\l+ set_contacts()\l+ set_contacts_from_plugin()\l+ set_projection()\l+ rtree()\l+ set_rtree()\l+ state()\l+ set_state()\l+ logging_msg()\l+ get_is_controlling()\l+ set_is_controlling()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classscrimmage_1_1Autonomy.html",tooltip=" "];
}
