digraph "scrimmage::sensor::AirSimSensor"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{scrimmage::sensor::\lAirSimSensor\n|# airsim_frame_num_\l# img_msg_\l# im_msg\l# new_image_\l# lidar_msg_\l# lidar_msg\l# new_lidar_\l# imu_msg_\l# imu_msg\l# new_imu_\l# running_\l# client_connected_\l# airsim_port_\l# airsim_timeout_s_\l# save_airsim_data_\l# get_image_data_\l# get_lidar_data_\l# get_imu_data_\l# image_acquisition_period_\l# lidar_acquisition_period_\l# imu_acquisition_period_\l|+ AirSimSensor()\l+ init()\l+ step()\l+ close()\l# save_data()\l# parse_camera_configs()\l# request_images()\l# parse_lidar_configs()\l# request_lidar()\l# parse_imu_configs()\l# request_imu()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{scrimmage::Sensor\n||+ init()\l+ type()\l+ step()\l+ sensor_msg()\l+ sense()\l+ sense()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classscrimmage_1_1Sensor.html",tooltip=" "];
  Node93 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #sim_client_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node93 [label="{std::shared_ptr\< msr\l::airlib::RpcLibClientBase \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node94 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #csv" ,arrowhead="odiamond",fontname="Helvetica"];
  Node94 [label="{scrimmage::CSV\n|# next_row_\l|+ ~CSV()\l+ set_column_headers()\l+ set_column_headers()\l+ append()\l+ open_output()\l+ output_is_open()\l+ close_output()\l+ to_csv()\l+ read_csv()\l+ read_csv_from_string()\l+ set_no_value_string()\l+ to_string()\l+ rows()\l+ at()\l+ equals()\l# get_csv_line_elements()\l# write_headers()\l# write_row()\l- headers_to_string()\l- rows_to_string()\l- row_to_string()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classscrimmage_1_1CSV.html",tooltip=" "];
  Node6 -> Node94 [color="grey25",fontsize="10",style="solid",label=" #no_value_str_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{std::string\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node96 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #running_mutex_\n#new_imu_mutex_\n#new_lidar_mutex_\n#lidar_msg_mutex_\n#img_msg_mutex_\n#new_image_mutex_\n#imu_msg_mutex_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node96 [label="{std::mutex\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node97 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #enu_to_ned_yaw_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node97 [label="{scrimmage::Angles\n|# angle_\l# in_direction_\l# in_zero_\l# out_direction_\l# out_zero_\l|+ Angles()\l+ Angles()\l+ set_input_clock_direction()\l+ set_input_zero_axis()\l+ set_output_clock_direction()\l+ set_output_zero_axis()\l+ is_angle_360()\l+ set_angle()\l+ angle()\l+ deg2rad()\l+ rad2deg()\l+ angle_360()\l+ angle_2pi()\l+ angle_180()\l+ angle_pi()\l+ angle_diff()\l+ angle_diff_rad()\l+ angle_within()\l+ angle_within_rad()\l+ angle_avg()\l+ angle_avg_rad()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscrimmage_1_1Angles.html",tooltip=" "];
  Node98 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #cam_configs_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node98 [label="{std::list\< scrimmage\l::sensor::CameraConfig \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #vehicle_name_\n#airsim_ip_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node100 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #imu_names_\n#lidar_names_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node100 [label="{std::vector\< std::string \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node100 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node101 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #img_pub_\n#imu_pub_\n#lidar_pub_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node101 [label="{std::shared_ptr\< Publisher \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node106 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #request_imu_thread\l_\n#request_lidar\l_thread_\n#request_images\l_thread_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node106 [label="{std::thread\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
}
