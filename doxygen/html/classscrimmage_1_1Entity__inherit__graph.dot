digraph "scrimmage::Entity"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{scrimmage::Entity\n|# id_\l# visual_\l# controllers_\l# motion_model_\l# autonomies_\l# mp_\l# health_points_\l# max_hits_\l# type_\l# proj_\l# random_\l# state_\l# state_truth_\l# properties_\l# sensors_\l# active_\l# visual_changed_\l# services_\l# contacts_\l# rtree_\l# radius_\l# plugin_manager_\l# file_search_\l# pubsub_\l# printer_\l# global_services_\l# param_server_\l# time_\l|+ init()\l+ print_plugins()\l+ parse_visual()\l+ close()\l+ collision()\l+ hit()\l+ is_alive()\l+ posthumous()\l+ setup_desired_state()\l+ ready()\l+ call_service()\l+ call_service()\l+ call_service()\l+ call_service()\l+ state()\l+ state_truth()\l+ autonomies()\l+ motion()\l+ controllers()\l+ set_id()\l+ id()\l+ set_health_points()\l+ health_points()\l+ projection()\l+ set_projection()\l+ set_mp()\l+ mp()\l+ set_random()\l+ random()\l+ type()\l+ set_visual_changed()\l+ visual_changed()\l+ contact_visual()\l+ sensors()\l+ sensors()\l+ sensor()\l+ services()\l+ global_services()\l+ set_global_services()\l+ properties()\l+ set_active()\l+ active()\l+ contacts()\l+ rtree()\l+ plugin_manager()\l+ file_search()\l+ pubsub()\l+ printer()\l+ param_server()\l+ radius()\l+ set_time_ptr()\l+ set_printer()\l# print()\l* init()\l* print_plugins()\l* parse_visual()\l* close()\l* collision()\l* hit()\l* is_alive()\l* posthumous()\l* setup_desired_state()\l* ready()\l* call_service()\l* call_service()\l* call_service()\l* call_service()\l* state()\l* state_truth()\l* autonomies()\l* motion()\l* controllers()\l* set_id()\l* id()\l* set_health_points()\l* health_points()\l* projection()\l* set_projection()\l* set_mp()\l* mp()\l* set_random()\l* random()\l* type()\l* set_visual_changed()\l* visual_changed()\l* contact_visual()\l* sensors()\l* sensors()\l* sensor()\l* services()\l* global_services()\l* set_global_services()\l* properties()\l* set_active()\l* active()\l* contacts()\l* rtree()\l* plugin_manager()\l* file_search()\l* pubsub()\l* printer()\l* param_server()\l* radius()\l* set_time_ptr()\l* set_printer()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{std::enable_shared\l_from_this\< Entity \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
